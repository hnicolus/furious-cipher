{"version":3,"sources":["config/appConfig.js","components/Footer.js","components/NavMenu.js","components/Layout.js","components/Switch.js","components/Counter.js","components/CipherForm.js","components/CeasarCipher.js","components/Home.js","App.js","registerServiceWorker.js","index.js"],"names":["Footer","className","appConfig","href","style","color","target","rel","NavMenu","props","toggleNavbar","bind","state","collapsed","this","setState","Navbar","light","Container","NavbarBrand","tag","Link","to","NavbarToggler","onClick","Collapse","isOpen","navbar","NavItem","NavLink","Component","displayName","name","Layout","children","Switch","encrypt","onEncrypt","onDecrypt","type","id","htmlFor","Counter","aria-live","currentCount","onDecrement","onIncrement","CipherForm","enteredText","onTextChange","onKeyUp","height","cols","rows","value","onChange","CeasarCipher","outputMessage","secretKey","loading","handleTextChange","currentTarget","handleKeyUp","doCipher","handleIncrement","handleDecrement","handleOnDecrypt","handleOnEncrypt","a","key","input","message","axios","post","catch","err","console","error","data","Home","App","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","baseUrl","document","getElementsByTagName","getAttribute","rootElement","getElementById","ReactDOM","render","basename","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.54ba990c.chunk.js","sourcesContent":["export default {\n    Name:'Furious Cipher',\n    Description :\"Furious Cipher cipher for everyone\",\n    icon:'shekel sign',\n    Version:\"1.0.0-beta\"\n}","import React from 'react';\nimport appConfig from '../config/appConfig';\nconst Footer = () => {\n    return (\n        <div className='appdetails'>\n            <h4 className='appDescription' >{appConfig.Description}. developed by\n                <a href=\"https://nicksoftware.co.za\" style={{ color: 'cyan' }} target='_blank' rel=\"noopener noreferrer\"> Nicolas Maluleke</a></h4>\n            <p className='appVersion'>version : {appConfig.Version}</p>\n        </div>);\n}\n\nexport default Footer;","import React, { Component } from 'react';\r\nimport { Collapse, Container, Navbar, NavbarBrand, NavbarToggler, NavItem, NavLink } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport './NavMenu.css';\r\n\r\nexport class NavMenu extends Component {\r\n  static displayName = NavMenu.name;\r\n\r\n  constructor (props) {\r\n    super(props);\r\n\r\n    this.toggleNavbar = this.toggleNavbar.bind(this);\r\n    this.state = {\r\n      collapsed: true\r\n    };\r\n  }\r\n\r\n  toggleNavbar () {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed\r\n    });\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <header>\r\n        <Navbar className=\"navbar-expand-sm navbar-toggleable-sm navbar-dark bg-dark box-shadow mb-3\" light>\r\n          <Container>\r\n            <NavbarBrand tag={Link} to=\"/\">Furious Cipher</NavbarBrand>\r\n            <NavbarToggler onClick={this.toggleNavbar} className=\"mr-2\" />\r\n            <Collapse className=\"d-sm-inline-flex flex-sm-row-reverse\" isOpen={!this.state.collapsed} navbar>\r\n              <ul className=\"navbar-nav flex-grow\">\r\n                <NavItem>\r\n                  <NavLink tag={Link} to=\"/\">Home</NavLink>\r\n                </NavItem>\r\n              </ul>\r\n            </Collapse>\r\n          </Container>\r\n        </Navbar>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Container } from 'reactstrap';\r\nimport Footer from './Footer';\r\nimport { NavMenu } from './NavMenu';\r\n\r\nexport class Layout extends Component {\r\n  static displayName = Layout.name;\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <NavMenu />\r\n        <Container>\r\n          {this.props.children}\r\n        </Container>\r\n        <Footer/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\n\nfunction Switch({encrypt,onEncrypt,onDecrypt}) {\n    return (\n        <div className=\"row\">\n            <div className=\"custom-control custom-radio custom-control-inline\">\n                <input  type=\"radio\" onClick={onEncrypt} id=\"customRadioInline1\" name=\"customRadioInline\" className=\"custom-control-input\" />\n                <label className=\"custom-control-label\" htmlFor=\"customRadioInline1\">Encrypt</label>\n            </div>\n            <div className=\"custom-control custom-radio custom-control-inline\">\n                <input type=\"radio\" onClick={onDecrypt} id=\"customRadioInline2\" name=\"customRadioInline\" className=\"custom-control-input\" />\n                <label className=\"custom-control-label\" htmlFor=\"customRadioInline2\">Decrypt</label>\n            </div>\n        </div>\n    );\n}\n\nexport default Switch;","import React, { Component } from 'react';\r\n\r\nexport default class Counter extends Component {\r\n  static displayName = Counter.name;\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <p aria-live=\"polite\"> Shifts : <strong>{this.props.currentCount}</strong></p>\r\n        <button className=\"btn btn-primary mx-1\" onClick={this.props.onDecrement}> - </button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={this.props.onIncrement}> + </button>\r\n      </div>\r\n      );\r\n  }\r\n}\r\n","import React from 'react';\n\nconst  CipherForm= ({enteredText,onTextChange,onKeyUp})=> {\n\n    return (\n        <div className=\"card shadow-sm\" style={{ height: '480px' }}>\n        <div className=\"card-body\">\n            <h5 className=\"card-title\">Enter Message</h5>\n            <div className=\"form-group\">\n                <textarea name=\"\" id=\"\"\n                    cols=\"30\" rows=\"16\" \n                    value={enteredText}\n                     onChange={onTextChange} onKeyUp={onKeyUp}\n                    className=\"form-control h-100 text__area\"></textarea>\n            </div>\n        </div>\n    </div>\n    );\n}\n\nexport default CipherForm;","import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport Switch from './Switch';\nimport Counter from './Counter';\nimport CipherForm from './CipherForm';\n\nclass CeasarCipher extends Component {\n    state = {\n        enteredText: '',\n        encrypt: true,\n        outputMessage: '',\n        secretKey: 2,\n        loading: false\n\n    }\n\n    handleTextChange = ({ currentTarget }) => {\n        this.setState({ enteredText: currentTarget.value });\n    }\n\n    handleKeyUp = () => {\n        this.doCipher();\n    }\n    handleIncrement = () => {\n        this.setState({ secretKey: this.state.secretKey + 1 });\n        this.doCipher();\n    }\n    handleDecrement = () => {\n        this.setState({ secretKey: this.state.secretKey - 1 });\n        this.doCipher();\n\n    }\n    handleOnDecrypt = () => {\n        this.setState({ encrypt: false });\n        this.doCipher();\n    };\n    handleOnEncrypt = () => {\n        this.setState({ encrypt: true });\n        this.doCipher();\n    }\n\n\n    doCipher = async () => {\n        const { enteredText, secretKey: key, encrypt } = this.state;\n        this.setState({ loading: true });\n        \n        if (!enteredText) return;\n\n        const input = { message: enteredText, secretKey: key };\n\n        if (encrypt) {\n            const { data: message } = await axios\n                .post(`CeasarCipher/encrypt`, input)\n                .catch(err => {\n                    console.error(err);\n                });\n\n            this.setState({ outputMessage: message, loading: false });\n        } else {\n            const { data: message } = await axios\n                .post(`CeasarCipher/decrypt`, input)\n                .catch(err => {\n                    console.error(err);\n                });\n            this.setState({ outputMessage: message, loading: false });\n\n        }\n    }\n\n    render() {\n        const { enteredText, outputMessage, secretKey, encrypt } = this.state;\n        return (\n            <div className=\"row justify-content-center\">\n                <div className=\"col-5  col-xs-12\">\n                    <CipherForm enteredText={enteredText} onKeyUp={this.handleKeyUp} onTextChange={this.handleTextChange} />\n                </div>\n                <div className=\"col-2 align-self-center\">\n                    <Counter onIncrement={this.handleIncrement} currentCount={secretKey} onDecrement={this.handleDecrement} />\n                    <Switch encrypt={encrypt} onEncrypt={this.handleOnEncrypt} onDecrypt={this.handleOnDecrypt} />\n                </div>\n                <div className=\"col-5  col-xs-12\" >\n                    <div className=\"card shadow-sm\" style={{ height: '480px' }}>\n                        <div className=\"card-body\">\n                            <h5 className=\"card-title\">Output Message</h5>\n                            <hr />\n                            {enteredText && (<p>{outputMessage}</p>)}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default CeasarCipher;","import React, { Component } from 'react';\r\nimport CeasarCipher from './CeasarCipher';\r\nexport class Home extends Component {\r\n  static displayName = Home.name;\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <CeasarCipher />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Route } from 'react-router';\r\nimport { Layout } from './components/Layout';\r\nimport { Home } from './components/Home';\r\n\r\nimport './custom.css'\r\n\r\nexport default class App extends Component {\r\n  static displayName = App.name;\r\n\r\n  render () {\r\n    return (\r\n      <Layout>\r\n        <Route exact path='/' component={Home} />\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport default function register () {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW (swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\r\nconst rootElement = document.getElementById('root');\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={baseUrl}>\r\n    <App />\r\n  </BrowserRouter>,\r\n  rootElement);\r\n\r\nregisterServiceWorker();\r\n\r\n"],"sourceRoot":""}